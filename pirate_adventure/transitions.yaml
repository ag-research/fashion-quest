---
conditions:

  ?
    - @turns == 0
  :
    - begin

  ?
    - @player.hp < 1
  :
    - death

  ?
    - @state['entered_neverneverland']
  :
    - neverneverland

  ?
    - (@turns % 8) < 4
  :
    - tide_in

  ?
    - (@turns % 8) >= 4
  :
    - tide_out

  ?
    - @props['torch'].traits['lit'] == true && @props['torch'].traits['burn_turns'] == 25
  :
    - warn_that_torch_will_go_out

  ?
    - @player.location == 'ledge' && @props['sneakers'].location != 'player'
  :
    - risk_of_falling

  ?
    - @player.location == @characters['parrot'].location
        && @characters['parrot'].location != @characters['pirate'].location
        && @characters['parrot'].location != @props['crackers'].location
  :
    - parrot_flies_off

  ?
    - @props['rum'].location == 'pirate' and !@props['bottle'].location
  :
    - pirate_runs_off

  ?
    - @characters['pirate'].traits['asleep'] != true && (@characters['pirate'].location == 'graveyard' || @characters['pirate'].location == 'attic')
  :
    - pirate_wakes_up

  ?
    - @player.location == 'shore' && @state['last_location'] == 'ship' && @characters['pirate'].location == 'ship'
  :
    - pirate_follows_to_shore

  ?
    - @characters['pirate'].location == 'shore' && @props['bottles'].location == 'shore' && @props['bottles'].traits['buried'] == false
  :
    - pirate_grabs_rum

  ?
    - @characters['pirate']
  :
    - pirate_description # set name/description depending on if pirate is awake

  ?
    - @characters['parrot'].location == 'monastery' && @characters['snakes'].location == 'monastery'
  :
    - snakes_run_off

outcomes:

  begin: |
    @state['ship_location'] = 'beach'
    "" # don't return any output for this

  death: |
    @over = true
    "You have died.\n"

  neverneverland: |
    if (@state['entered_neverneverland'] + 6) < @turns
      @over = true
      "Since nothing is happening this adventure is over.\n"
    end

  tide_in: |
    # sail and dig commands need to know whether tide is in or out
    @state['tide'] = 'in'

    transition_output = ''
    # even if character has shovel, prevent seeing or taking anchor while tide is in and anchor in lagoon
    if @props['anchor'].location == 'lagoon'
      @props['anchor'].traits['visible'] = false
    end
    if @player.location == 'lagoon'
      transition_output << "The tide is coming in. Flotsam and jetsam surrounds.\n"
      if @props['water wings'].location != 'player'
        transition_output << "I'm underwater, I guess I don't swim well. Blub Blub...\n"
        transition_output << eval(@transitions['outcomes']['death'])
      end
      transition_output
    end

  tide_out: |
    # sail and dig commands need to know whether tide is in or out
    @state['tide'] = 'out'

    # if anchor is in lagoon, let character see it
    if @props['anchor'].location == 'lagoon'
      @props['anchor'].traits['visible'] = true
    end
    if @player.location == 'lagoon'
      "The tide is out.\n"
    end

  warn_that_torch_will_go_out: |
    "Your torch will run out in 24 turns!\n"

  risk_of_falling: |
    if rand(4) + 1 == 1
      @player.location = 'neverneverland'
      @state['entered_neverneverland'] = @turns
      "I slipped and fell...\nI'm dead!\n"
    end

  parrot_flies_off: |
    if @props['crackers'].location != 'player'
      @characters['parrot'].location = @props['crackers'].location
      "The parrot flies off looking very unhappy...\n"
    end

  pirate_runs_off: |
    @characters['pirate'].location = 'attic'
    @characters['pirate'].traits['asleep'] = true
    @props['bottle'].location = 'attic'
    "The pirate grabs the rum and scuttles off chortling.\n"

  pirate_wakes_up: |
    @characters['pirate'].location = 'ship'
    @props['bottles'].location = 'shore' # always make sure there are bottles of rum at the shore for the pirate
    "Pirate awakens and says `Aye matey we be casting off soon` He then VANISHES\n"

  pirate_follows_to_shore: |
    @characters['pirate'].location = 'shore'
    "The pirate follows me ashore as if expecting something.\n"

  pirate_grabs_rum: |
    @characters['pirate'].location = 'graveyard'
    @characters['pirate'].traits['asleep'] = true
    @props['bottles'].location = 'pirate'
    "You dug up bottles of rum!\nThe pirate grabs the rum and scuttles off chortling.\n"

  pirate_description: |
    if @characters['pirate'].traits['asleep'] == true
      @characters['pirate'].name = 'sleeping pirate'
      @characters['pirate'].description = 'The pirate is sleeping.'
    else
      @characters['pirate'].name = 'pirate'
      @characters['pirate'].description = ''
    end
    "" # don't output anything

  snakes_run_off: |
    @characters['snakes'].location = ''
    "Parrot attacks snakes and drives them off.\n"

  win: |
    # winning logic can be put here

  loss: |
    # losing logic can be put here
