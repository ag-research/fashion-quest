---
syntax:
- "go <direction>"

logic: |

  direction = arg['direction']

  # If an exit exists, load destination location and issue look command
  if (locations[location].exits[direction])

    # If player is trying to move around in the dark, kill player
    if locations[location].dark and !player.has_lit_item

      game.over = true
      return "You trip in the dark and break your neck.\nWould you like to restart? (y/n)\n"

    else

      player.location = locations[location].exits[direction]['destination']

      return '>look'

    end

  # Otherwise check for a door
  elsif doors[direction].locations.include?(player.location)

    # Go through door, if it's open

    if doors[direction].opened

      # determine possible destinations
      possible_destinations = doors[direction].locations.dup
      possible_destinations.delete(player.location)

      # randomly select a possible destination
      player.location = possible_destinations[rand(possible_destinations.length)]

      return '>look'

    else

      return "It's not open.\n"
    end

  else

    return "You can't go that way.\n"

  end
