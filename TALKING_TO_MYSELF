Fashion Quest

Notes:

[High priority]

-add GPL
-make sure command code is civilized
-make old demo game make some sense
-maybe have "talk <character>" command to get some hints as to what can be talked about
-should include init logic in config yaml (for includes, etc.)
-instead of neverneverland buggering out in a set amount of turns, make it random (1 in 4 chance?)
-further refactoring of location describe logic
-de-weirdify location class
-have location exit visibility option
-is there a description property for exits?

[Medium priority]

-what is player name for?
-in lagoon all exits but north go back to beach
-work out what things are too big to go through crack and set their sizes
-bottle/water thing is inelegant... water should get contained in bottle
-what do plans say when read?
-finish migrating propertis to traits
-add "prop_anywhere" argument support for commands that work on props that don't have a location yet (i.e. building or conjuring)
-on_exchange event... what if different events for different types of exchanges?

-Naming
  -id, name, description
  -props: singular (pronoun: it), plural (pronoun: they), proper (no pronoun) / gender (default none)
  -character: singluar (he/she/it), plural (the <noun>s), proper (no pronoun) / gender (default none)
  -doors too?
  -maybe noun/noun_cap paradigm will work? try it
  -naming scheme for props: id for inventory, name for listing in locations (describe method), description for looking
  -to test naming could create function that lists all objects and possible names for them

-RDOC documentation

-<any> works, but maybe something other than any ... anything? component? object? thing? noun?
-should get prop and door traits by default if not set by yaml to lessen errors in
 commands (we do this for characters)... test this by looping through everything and trying to access traits

[Low priority]

  Feature enhancements:

    Putting:
    -how to implement 'put'... only for props, not characters... uses mechanism like exchange
      -put together gun and silencer
      -put cake in oven
      -look in oven
      -get cake from oven

    Naming:
    -characters and props should have gender for pronoun support
    -characters and props should have plural=true as well
    -characters and props should have proper=true as well (look at search command to see why)
    -in characters, make sure replacing of "name" with "id" doesn't cause problems

  Finishing:

    -refine existing code/data structures
    -test on all platforms
    -versions
      -v0.5a will be first version
        -resolve remaining issues
        -rough out roadmap
      -0.6
        -begin unit tests
        -firm up whether class methods are public or private
        -rough out documentation
      -0.7
        -complete documentation
      -0.8
        -
      -0.9
        -
      -1
        -
    -review IF engine framework comparisons: put anything I don't want to do right now on roadmap
    -roadmap will outline goals for each point release

Maybe:

  -change the necklace to shoes, have it so the shoes can be given to another character
  -move appropriate synonyms to command_abbreviations
  -change 'prop_404' to 'not_found_message'
  -if character is dead and has stuff on him, hint at that during look
  -add alert if garbage word appears in command keywords and filter out

Roadmap:

  -add unit tests to classes
  -document (rdoc and human doc)

Remember:

  -using is equivelant to others... i.e. use knife to open door = open door with knife

low priority - make sure the map only falls out when you look at the opened chest

Documentation:
-document how prop setting work (opened, etc.)

