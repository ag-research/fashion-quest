Fashion Quest

NEXT:
can get parrot, can't get parrot in shack unless pirate isn't there... maybe can use on_get logic?
have to "dig anchor" before getting anchor

set sail changes exits for ship
ship exits beach and shore should lead to same place

NEXT: add "prop_anywhere" argument support for commands that work on props that don't have
a location yet (i.e. building or conjuring)

-when does the parrot return to the shack? when does parrot fly off? maybe when you got no crackers?

-build ship requires lumber, sails, (keel and mast), plans*, anchor, (prolly nails), (prolly hammer)
-on_build?
  change ship materials' locations to ''
  add "there is a Pirate ship" or something to beach description
  add exit "ship"
  CONGRATULATIONS !!! But your Adventure is not over yet...

-add location ship (with one exit at first: shore)

-on ship, "set sail" will bring you to treasure island?
  pirate isn't awake: Sorry I can't I've no crew
  don't have map: Sorry I can't Pirate says: `Aye matey we be needing a map first`.
  tide is out: Pirate says: `Aye me Buckeroo, we be waiting for the tide to come in!`
  success: After a day at sea we set anchor off of a sandy beach. All Ashore who's going Ashore...

-when you get water
  -changes bottle's description
  -lets you know the water is in the bottle
  -changes water location to 'limbo'
Bottle of salt water

dig anchor <- makes anchor portable
get anchor

you do have to look in chest twice... ass :/

wake pirate
if location == 'atic' and pirate is asleep
  Wicked looking pirate
  Pirate awakens and says `Aye matey we be casting off soon` He then VANISHES!
  will he say this before ship is built?






-make sure to copy pirate version of get and go commands to main commands

-have option to add exit that isn't visible by default (or just have it so dynamic 
 exits aren't shown, make it dependent to add a description)

-what do plans say when read?

-should there be a visible property for exits (for hidden exits?)
-should there be a description property for exits (for fancier language?)

-clean up event handler situation

-make it so "You see XXX" doesn't show each item on a new line... gets wacky
-work out what things are too big to go through crack and set their sizes
-bottle/water thing is inelegant... water should get contained in bottle

-build ship: "I can't! I've no plans!"
  -need build command leveraging build_with and on_build
-in lagoon all exits but north go back to beach
-you need safety sneakers or you slip off the window after a few turns

CAVE ROOM 1 (*S2 *E3 *W foot_of_hill *D pit)
CAVE ROOM 2 (*N1 *E foot_of_hill W3)
CAVE ROOM 3 (*N1 *S foot_of_hill *E2 *W4)
CAVE ROOM 4 (*S foot_of_hill *E foot_of_hill *W3)

Bugs:

  -make sure character events in original game work... prolly don't cuz they're set up to have it pick a random
   one

Refactoring?

  -can character room exit getting be refactored? (maybe exits function for room class?)
  -what is player name for?

  -look at commands... make sure the code looks civilized

Feature enhancements:

  Putting:
  -how to implement 'put'... only for props, not characters... uses mechanism like exchange
    -put together gun and silencer
    -put cake in oven
    -look in oven
    -get cake from oven

  Naming:
  -characters and props should have gender for pronoun support
  -characters and props should have plural=true as well
  -characters and props should have proper=true as well (look at search command to see why)
  -in characters, make sure replacing of "name" with "id" doesn't cause problems

Finishing:

  -refine existing code/data structures
  -test on all platforms
  -versions
    -v0.5a will be first version
      -resolve remaining issues
      -rough out roadmap
    -0.6
      -begin unit tests
      -firm up whether class methods are public or private
      -rough out documentation
    -0.7
      -complete documentation
    -0.8
      -
    -0.9
      -
    -1
      -
  -review IF engine framework comparisons: put anything I don't want to do right now on roadmap
  -roadmap will outline goals for each point release
  -have semi-enjoyable sample adventure

Maybe:

  -change the necklace to shoes, have it so the shoes can be given to another character
  -add GPL
  -move appropriate synonyms to command_abbreviations
  -locations and player should be singletons
  -change 'prop_404' to 'not_found_message'
  -if character is dead and has stuff on him, hint at that during look
  -add alert if garbage word appears in command keywords and filter out

Roadmap:

  -proof coding style
  -add unit tests to classes
  -document (rdoc and human doc)
  -create demo game

Remember:

  -using is equivelant to others... i.e. use knife to open door = open door with knife

