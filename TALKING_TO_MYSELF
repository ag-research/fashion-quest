Fashion Quest

-<any> works, but maybe something other than any ... anything? component? object? thing?
-how to include characters in inventory (need to pass character array to player)
-should get prop and door traits by default if not set by yaml to lessen errors in
 commands (we do this for characters)

NEXT:
-make old game make some sense... it is primarily to show character behaviour
-maybe have "talk <character>" command to get some hints as to what can be talked about

NEXT:
- make a transition so when you first go to the shore, the pirate follows
- then make it so when you give him the bottles, he goes to sleep wherever he goes to sleep
- when you wake the pirate he'll go back to the ship I guess then you can sail again

-in order for somethign to be openable, must have opened trait (usually set to false)... maybe this is dumb? maybe change "opened" to "open" at any rate

NEXT:
- get rid of support for exits in contains
- update props files to support this

NEXT:
- make prop attack_strength property into traits
- merge prop class with character class... why? we need to make some characters gettable

- move character methods out into a module
- have character methods test for alive trait

NEXT:
-how can a character be gettable?
 could extend "carrying" to check for characters

NEXT:
- check new_pirate_notes.txt

NEXT:
- can get parrot, can't get parrot in shack unless pirate isn't there... maybe can use on_get logic?

NEXT: add "prop_anywhere" argument support for commands that work on props that don't have
a location yet (i.e. building or conjuring)

NEXT: migrate properties to traits

-when does the parrot return to the shack? when does parrot fly off? maybe when you got no crackers?

-when you get water
  -changes bottle's description
  -lets you know the water is in the bottle
  -changes water location to 'limbo'
Bottle of salt water

-make sure to copy pirate version of get and go commands to main commands

-have option to add exit that isn't visible by default (or just have it so dynamic 
 exits aren't shown, make it dependent to add a description)

-what do plans say when read?

-should there be a visible property for exits (for hidden exits?)
-should there be a description property for exits (for fancier language?)

-clean up event handler situation

-make it so "You see XXX" doesn't show each item on a new line... gets wacky
-work out what things are too big to go through crack and set their sizes
-bottle/water thing is inelegant... water should get contained in bottle

-in lagoon all exits but north go back to beach
-you need safety sneakers or you slip off the window after a few turns

CAVE ROOM 1 (*S2 *E3 *W foot_of_hill *D pit)
CAVE ROOM 2 (*N1 *E foot_of_hill W3)
CAVE ROOM 3 (*N1 *S foot_of_hill *E2 *W4)
CAVE ROOM 4 (*S foot_of_hill *E foot_of_hill *W3)

Bugs:

  -make sure character events in original game work... prolly don't cuz they're set up to have it pick a random
   one

Refactoring?

  -can character room exit getting be refactored? (maybe exits function for room class?)
  -what is player name for?

  -look at commands... make sure the code looks civilized

Feature enhancements:

  Putting:
  -how to implement 'put'... only for props, not characters... uses mechanism like exchange
    -put together gun and silencer
    -put cake in oven
    -look in oven
    -get cake from oven

  Naming:
  -characters and props should have gender for pronoun support
  -characters and props should have plural=true as well
  -characters and props should have proper=true as well (look at search command to see why)
  -in characters, make sure replacing of "name" with "id" doesn't cause problems

Finishing:

  -refine existing code/data structures
  -test on all platforms
  -versions
    -v0.5a will be first version
      -resolve remaining issues
      -rough out roadmap
    -0.6
      -begin unit tests
      -firm up whether class methods are public or private
      -rough out documentation
    -0.7
      -complete documentation
    -0.8
      -
    -0.9
      -
    -1
      -
  -review IF engine framework comparisons: put anything I don't want to do right now on roadmap
  -roadmap will outline goals for each point release
  -have semi-enjoyable sample adventure

Maybe:

  -change the necklace to shoes, have it so the shoes can be given to another character
  -add GPL
  -move appropriate synonyms to command_abbreviations
  -locations and player should be singletons
  -change 'prop_404' to 'not_found_message'
  -if character is dead and has stuff on him, hint at that during look
  -add alert if garbage word appears in command keywords and filter out

Roadmap:

  -proof coding style
  -add unit tests to classes
  -document (rdoc and human doc)
  -create demo game

Remember:

  -using is equivelant to others... i.e. use knife to open door = open door with knife

low priority - make sure the map only falls out when you look at the opened chest

