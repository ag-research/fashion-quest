To-do:
-change 'prop_404' to 'not_found_message'
*-finish documenting props
-characters could have "patrols"
-for attacking, add agility to character, the higher it is the harder it is to hit the character
 (no agility or agility 1 will always hit, 2 = 50% of the time, 3 = 33.3% of the time, etc.)
 actually, what can be done is subtract the agility of the attacker from the agility of the attackee
*-add "mutters" support and "chatiness" for probability of character muttering (parrot?)
-change readme from markdown to rst for consistancy.
-add generic version of dig to standard commands
-finish migrating properties to traits

Maybe:
-might be cool to be able to use | chars in syntax patterns
-put (i.e. put x in y)
-do some kind of background animation for pirate adventure
-try out video
-fashion quest site
-try out Shoes packager again
-make a way to create a ruby script for issueing commands, for testing old game
 ...maybe the command will be "run script" or "load script"
-maybe have a way of opening a directory to run an adventure in it with a "Browse..." button on the selector
-selector is weird if you resize it

???do we need the destination/prop paradigm in exits? what is it used for?

[Pirate adventure authenticity]
P-you opened it <- ??? this alert pops up when you open book... fix this
P-instead of neverneverland buggering out in a set amount of turns, make it random (1 in 4 chance?)
P-in lagoon all exits but north go back to beach
P-work out what things are too big to go through crack and set their sizes
P-bottle/water thing is inelegant... water should get contained in bottle
P-what do plans say when read?
-"pirate takes rum", "pirate grabs rum and scuttles..." is redundant
-after dropping bottle you still have water... kind of fuck-oed
-add note to readme that there is scrolling issue with Ubuntu Linux
-get rug "Sorry I can't. It's nailed to the floor!"
-maybe have on_get overrule normal output of prop opening so opening book can make "Something falls out." 
-low priority - make sure the map only falls out when you look at the opened chest

-what is player name for? maybe if set make things third-person

-RDOC documentation

[Low priority]


  Feature enhancements:

    Putting:
    -how to implement 'put'... only for props, not characters... uses mechanism like exchange
      -put together gun and silencer
      -put cake in oven
      -look in oven
      -get cake from oven

  Finishing:

    -refine existing code/data structures
    -test on all platforms
    -versions
      -v0.5a will be first version
        -resolve remaining issues
        -rough out roadmap
      -0.6
        -begin unit tests
        -firm up whether class methods are public or private
        -rough out documentation
      -0.7
        -complete documentation
      -0.8
        -
      -0.9
        -
      -1
        -
    -review IF engine framework comparisons: put anything I don't want to do right now on roadmap
    -roadmap will outline goals for each point release

Maybe:

  -move appropriate synonyms to command_abbreviations
  -if character is dead and has stuff on him, hint at that during look
  -add alert if garbage word appears in command keywords and filter out

Roadmap:

  -add unit tests to classes
  -document (rdoc and human doc)

Remember:

  -using is equivelant to others... i.e. use knife to open door = open door with knife


Documentation:
-document how prop setting work (opened, etc.)

Fashion Quest: cross-platform interactive fiction using Ruby and Shoes

cool puzzle
-room contains fire hydrant and open window too high to reach
-need wrench to open
-if you open it it floods the room and rushes out the door
-if you have door closed room will fill to the open window
-if you are wearing lifejacket you will float and can go through the open window
-

Criteria for Comparison to other frameworks:

                                              ADRIFT INFORM 6 INFORM 7  TADS 3 HUGO FASHION QUEST
-uses general purpose programming language?   N      N        N         ?
-extensible?                                  N      Y        Y         ?
-fully cross-platform?                        N      Y        Y         ?
-supports automated testing?                  N?     Y        Y         ?
-graphics suport?                             Y      Y        Y         ?
-open source?                                 N      Y        Y         ?

Idea... save everything to YAML and binhex graphics? use that like ZCODE
