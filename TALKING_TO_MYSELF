Fashion Quest

-add close command to standard commands
-add generic version of dig to standard commands

-is agression/mobility documented?
*-seems to be bug with scrolling in Ubuntu when an image size is specified or something
-try drawing something not in animate and see if it gets wiped out

-try out Shoes packager again

Fix next:
*-any way to use instance vars instead of local vars in command logic? add these as params/instance vars to command class
EZ-make sure command code is civilized
-add "prop_anywhere" argument support for commands that work on props that don't have a location yet (i.e. building or conjuring)
  -<any> works, but maybe something other than any ... anything? component? object? thing? noun?
-see if my noun naming scheme paradigm meshes with grammar terms
-finish migrating properties to traits

-make a way to create a ruby script for issueing commands, for testing old game
 ...maybe the command will be "run script" or "load script"

do we need the destination/prop paradigm in exits? what is it used for?

[Pirate adventure authenticity]
P-you opened it <- ??? this alert pops up when you open book... fix this
P-instead of neverneverland buggering out in a set amount of turns, make it random (1 in 4 chance?)
P-in lagoon all exits but north go back to beach
P-work out what things are too big to go through crack and set their sizes
P-bottle/water thing is inelegant... water should get contained in bottle
P-what do plans say when read?
-"pirate takes rum", "pirate grabs rum and scuttles..." is redundant
-after dropping bottle you still have water... kind of fuck-oed
-add note to readme that there is scrolling issue with Ubuntu Linux
-get rug "Sorry I can't. It's nailed to the floor!"
-are sneakers described as safety sneakers?
-maybe have on_get overrule normal output of prop opening so opening book can make "Something falls out." 

-on_exchange event... what if different events for different types of exchanges?
-add GPL notices to source files
-maybe have "talk <character>" command to get some hints as to what can be talked aboutt
-what is player name for? maybe if set make things third-person
-clean up game selector layout
-maybe have it so game and pirate adv share get command... seems like pirate adventure implements a player carrying capacity

-RDOC documentation

-should get prop and door traits by default if not set by yaml to lessen errors in
 commands (we do this for characters)... test this by looping through everything and trying to access traits

[Low priority]


  Feature enhancements:

    Putting:
    -how to implement 'put'... only for props, not characters... uses mechanism like exchange
      -put together gun and silencer
      -put cake in oven
      -look in oven
      -get cake from oven

    Naming:
    -characters and props should have gender for pronoun support
    -characters and props should have plural=true as well
    -characters and props should have proper=true as well (look at search command to see why)
    -in characters, make sure replacing of "name" with "id" doesn't cause problems

  Finishing:

    -refine existing code/data structures
    -test on all platforms
    -versions
      -v0.5a will be first version
        -resolve remaining issues
        -rough out roadmap
      -0.6
        -begin unit tests
        -firm up whether class methods are public or private
        -rough out documentation
      -0.7
        -complete documentation
      -0.8
        -
      -0.9
        -
      -1
        -
    -review IF engine framework comparisons: put anything I don't want to do right now on roadmap
    -roadmap will outline goals for each point release

Maybe:

  -move appropriate synonyms to command_abbreviations
  -change 'prop_404' to 'not_found_message'
  -if character is dead and has stuff on him, hint at that during look
  -add alert if garbage word appears in command keywords and filter out

Roadmap:

  -add unit tests to classes
  -document (rdoc and human doc)

Remember:

  -using is equivelant to others... i.e. use knife to open door = open door with knife

low priority - make sure the map only falls out when you look at the opened chest

Documentation:
-document how prop setting work (opened, etc.)

Fashion Quest: cross-platform interactive fiction using Ruby and Shoes

Subproject: portable CLI to use as Shoes REPL

should have game startup logic and logic triggered by pressing enter (currently "parse(input_text)") and hardwired command be args to cli or something
should have checks for whether game is nil
should set @output_text to '' if not set by param

cool puzzle
-room contains fire hydrant and open window too high to reach
-if you open it it floods the room and rushes out the door
-if you have door closed room will fill to the open window
-if you are wearing lifejacket you will float and can go through the open window
-

